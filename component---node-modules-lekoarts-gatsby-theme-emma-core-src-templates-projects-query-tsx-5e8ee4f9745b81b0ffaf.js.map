{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/project-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/projects.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/projects-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/projects.tsx"],"names":["ProjectItem","node","style","div","sx","position","content","display","paddingTop","left","height","top","width","a","color","opacity","padding","zIndex","transition","textDecoration","fluid","cover","childImageSharp","to","slug","aria-label","title","alt","src","tracedSVG","right","bottom","filter","objectFit","backgroundColor","fontSize","fontWeight","client","service","Projects","projects","trail","useTrail","length","from","p","role","href","gridTemplateColumns","map","index","key","ProjectsComponent","allProject","data","nodes","query"],"mappings":"iMA8GeA,EA3FK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAClB,YAAC,IAASC,IAAV,CACEC,GAAI,CACFC,SAAU,WACV,WAAY,CACVC,QAAS,KACTC,QAAS,QACTC,WAAY,SAGhBN,MAAOA,GAEP,mBACEE,GAAI,CACFK,KAAM,EACNC,OAAQ,OACRL,SAAU,WACVM,IAAK,EACLC,MAAO,OACPC,EAAG,CACDC,MAAO,QACPJ,OAAQ,OACRD,KAAM,EACNM,QAAS,EACTC,QAAS,EACTX,SAAU,WACVM,IAAK,EACLC,MAAO,OACPK,OAAQ,GACRC,WAAY,uBACZC,eAAgB,OAChB,UAAW,CACTL,MAAO,QACPC,QAAS,EACTI,eAAgB,WAKtB,mBACEf,GAAI,CACF,QAAS,CACPM,OAAQ,OACRD,KAAM,EACNJ,SAAU,sBACVM,IAAK,EACLC,MAAO,OACP,QAAS,CACPP,SAAU,wBAKhB,YAAC,IAAD,CAAKe,MAAOnB,EAAKoB,MAAMC,gBAAgBF,SAEzC,YAAC,OAAD,CAAMG,GAAItB,EAAKuB,KAAMC,aAAA,uBAAmCxB,EAAKyB,OAC3D,mBACEC,IAAI,GACJC,IAAK3B,EAAKoB,MAAMC,gBAAgBF,MAAMS,UACtCzB,GAAI,CACFC,SAAU,WACVM,IAAK,EACLF,KAAM,EACNqB,MAAO,EACPC,OAAQ,EACRnB,MAAO,OACPF,OAAQ,OACRsB,OAAQ,eACRf,QAAS,EACTF,QAAS,IACTkB,UAAW,WAGf,mBACE7B,GAAI,CACF8B,gBAAiBjC,EAAKa,MACtBJ,OAAQ,OACRD,KAAM,EACNJ,SAAU,WACVM,IAAK,EACLC,MAAO,OACPK,QAAS,KAGb,mBAAKb,GAAI,CAAE+B,SAAU,EAAGC,WAAY,SAAWnC,EAAKoC,QACpD,mBAAKjC,GAAI,CAAE+B,SAAU,IAAMlC,EAAKqC,aC/BzBC,EAvDE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,SACZC,EAAQC,YAASF,EAASG,OAAQ,CACtCC,KAAM,CAAElC,OAAQ,MAChBa,GAAI,CAAEb,OAAQ,UAGhB,OAAwB,IAApB8B,EAASG,OAET,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAOE,EAAR,eAEE,oBAAMC,KAAK,MAAMrB,aAAW,cAA5B,MAFF,IAME,uBANF,oBAOmB,oDAPnB,qDAQE,iCARF,mFASE,YAAC,IAAOZ,EAAR,CAAUkC,KAAK,kFAAf,UATF,mCAeA,YAAC,IAAOF,EAAR,KACE,+BADF,IACgB,uBADhB,gDAE+C,4CAF/C,qDAGoB,mCAHpB,kBAGuD,qCAHvD,iFAKE,YAAC,IAAOhC,EAAR,CAAUkC,KAAK,kFAAf,UALF,OAgBN,YAAC,IAAD,CACE3C,GAAI,CACFG,QAAS,OACTyC,oBAAqB,uCACrBpC,MAAO,SAGR6B,EAAMQ,KAAI,SAAC/C,EAAOgD,GAAR,OACT,YAAC,EAAD,CAAahD,MAAOA,EAAOD,KAAMuC,EAASU,GAAQC,IAAKX,EAASU,GAAO1B,YClE/E,sCAEe4B,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBC,KACRD,WAER,OAAO,YAAC,EAAD,CAAUb,SAAUa,EAAWE,SDVzBH,IAEFI,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-projects-query-tsx-5e8ee4f9745b81b0ffaf.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport Img from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\nimport { animated } from \"react-spring\"\r\nimport { ChildImageSharp } from \"../types\"\r\n\r\ntype Props = {\r\n  node: {\r\n    color: string\r\n    title: string\r\n    slug: string\r\n    service: string\r\n    client: string\r\n    cover: ChildImageSharp\r\n  }\r\n  style: any\r\n}\r\n\r\nconst ProjectItem = ({ node, style }: Props) => (\r\n  <animated.div\r\n    sx={{\r\n      position: `relative`,\r\n      \"&:before\": {\r\n        content: `\"\"`,\r\n        display: `block`,\r\n        paddingTop: `100%`,\r\n      },\r\n    }}\r\n    style={style}\r\n  >\r\n    <div\r\n      sx={{\r\n        left: 0,\r\n        height: `100%`,\r\n        position: `absolute`,\r\n        top: 0,\r\n        width: `100%`,\r\n        a: {\r\n          color: `white`,\r\n          height: `100%`,\r\n          left: 0,\r\n          opacity: 0,\r\n          padding: 4,\r\n          position: `absolute`,\r\n          top: 0,\r\n          width: `100%`,\r\n          zIndex: 10,\r\n          transition: `all 0.3s ease-in-out`,\r\n          textDecoration: `none`,\r\n          \"&:hover\": {\r\n            color: `white`,\r\n            opacity: 1,\r\n            textDecoration: `none`,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          \"> div\": {\r\n            height: `100%`,\r\n            left: 0,\r\n            position: `absolute !important`,\r\n            top: 0,\r\n            width: `100%`,\r\n            \"> div\": {\r\n              position: `static !important`,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Img fluid={node.cover.childImageSharp.fluid} />\r\n      </div>\r\n      <Link to={node.slug} aria-label={`View detail page of ${node.title}`}>\r\n        <img\r\n          alt=\"\"\r\n          src={node.cover.childImageSharp.fluid.tracedSVG}\r\n          sx={{\r\n            position: `absolute`,\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            width: `100%`,\r\n            height: `100%`,\r\n            filter: `invert(100%)`,\r\n            zIndex: -1,\r\n            opacity: 0.08,\r\n            objectFit: `cover`,\r\n          }}\r\n        />\r\n        <div\r\n          sx={{\r\n            backgroundColor: node.color,\r\n            height: `100%`,\r\n            left: 0,\r\n            position: `absolute`,\r\n            top: 0,\r\n            width: `100%`,\r\n            zIndex: -2,\r\n          }}\r\n        />\r\n        <div sx={{ fontSize: 5, fontWeight: `bold` }}>{node.client}</div>\r\n        <div sx={{ fontSize: 2 }}>{node.service}</div>\r\n      </Link>\r\n    </div>\r\n  </animated.div>\r\n)\r\n\r\nexport default ProjectItem\r\n","/** @jsx jsx */\r\nimport { jsx, Container, Styled } from \"theme-ui\"\r\nimport { useTrail } from \"react-spring\"\r\nimport Layout from \"./layout\"\r\nimport { ChildImageSharp } from \"../types\"\r\nimport ProjectItem from \"./project-item\"\r\n\r\ntype Props = {\r\n  projects: {\r\n    color: string\r\n    slug: string\r\n    title: string\r\n    service: string\r\n    client: string\r\n    cover: ChildImageSharp\r\n  }[]\r\n}\r\n\r\nconst Projects = ({ projects }: Props) => {\r\n  const trail = useTrail(projects.length, {\r\n    from: { height: `0%` },\r\n    to: { height: `100%` },\r\n  })\r\n\r\n  if (projects.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <Container>\r\n          <Styled.p>\r\n            Hi!{` `}\r\n            <span role=\"img\" aria-label=\"Wave emoji\">\r\n              ðŸ‘‹\r\n            </span>\r\n            {` `}\r\n            <br />\r\n            Thanks for using <b>@lekoarts/gatsby-theme-emma</b>. You currently don't have any content in your{` `}\r\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\r\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emma\">\r\n              README\r\n            </Styled.a>\r\n            {` `}\r\n            to learn how to setup them.\r\n          </Styled.p>\r\n          <Styled.p>\r\n            <b>TL;DR:</b> <br />\r\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\r\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\r\n            Edit the frontmatter like described in the{` `}\r\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emma\">\r\n              README\r\n            </Styled.a>\r\n            .\r\n          </Styled.p>\r\n        </Container>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      sx={{\r\n        display: `grid`,\r\n        gridTemplateColumns: `repeat(auto-fit, minmax(280px, 1fr))`,\r\n        width: `100%`,\r\n      }}\r\n    >\r\n      {trail.map((style, index) => (\r\n        <ProjectItem style={style} node={projects[index]} key={projects[index].slug} />\r\n      ))}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import { graphql } from \"gatsby\"\r\nimport ProjectsComponent from \"../components/projects\"\r\n\r\nexport default ProjectsComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allProject(sort: { fields: date, order: DESC }) {\r\n      nodes {\r\n        color\r\n        slug\r\n        service\r\n        client\r\n        title\r\n        cover {\r\n          childImageSharp {\r\n            fluid(maxWidth: 850, quality: 90, traceSVG: { color: \"#e6e6e6\" }) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Projects from \"../../../components/projects\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allProject: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allProject } = data\r\n\r\n  return <Projects projects={allProject.nodes} />\r\n}\r\n"],"sourceRoot":""}